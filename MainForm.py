# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainForm.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets, uic
import sys
from raven import Client
client = Client('https://164afd8685654ca2a89b153dbe963b0f:c79397a4affc4e9c8533cb88a0e17b46@sentry.io/116042')

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 460)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("resourses/icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(10, 10, 380, 214))
        self.graphicsView.setObjectName("graphicsView")
        self.graphicsView_2 = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView_2.setGeometry(QtCore.QRect(400, 10, 380, 214))
        self.graphicsView_2.setObjectName("graphicsView_2")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(120, 290, 531, 23))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(670, 387, 111, 23))
        self.pushButton.setObjectName("pushButton")
        self.horizontalSlider = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider.setGeometry(QtCore.QRect(10, 330, 381, 22))
        self.horizontalSlider.setMaximum(30)
        self.horizontalSlider.setProperty("value", 4)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.horizontalSlider_2 = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider_2.setGeometry(QtCore.QRect(400, 330, 381, 22))
        self.horizontalSlider_2.setMaximum(30)
        self.horizontalSlider_2.setProperty("value", 5)
        self.horizontalSlider_2.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_2.setObjectName("horizontalSlider_2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 360, 47, 13))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(210, 360, 181, 13))
        self.label_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(400, 360, 47, 13))
        self.label_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(570, 360, 211, 13))
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(120, 390, 61, 21))
        self.label_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(170, 390, 481, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(10, 387, 101, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.comboBox_2 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_2.setGeometry(QtCore.QRect(670, 290, 111, 22))
        self.comboBox_2.setMaxVisibleItems(9)
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(10, 240, 181, 20))
        self.label_6.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(400, 240, 181, 20))
        self.label_7.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.label_7.setObjectName("label_7")
        self.lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber.setGeometry(QtCore.QRect(279, 240, 111, 23))
        self.lcdNumber.setObjectName("lcdNumber")
        self.lcdNumber_2 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_2.setGeometry(QtCore.QRect(669, 240, 111, 23))
        self.lcdNumber_2.setObjectName("lcdNumber_2")
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(10, 290, 131, 21))
        self.checkBox.setObjectName("checkBox")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuFilter_strenght = QtWidgets.QMenu(self.menuEdit)
        self.menuFilter_strenght.setObjectName("menuFilter_strenght")
        self.menuColor = QtWidgets.QMenu(self.menuEdit)
        self.menuColor.setObjectName("menuColor")
        self.menuResolution = QtWidgets.QMenu(self.menuEdit)
        self.menuResolution.setObjectName("menuResolution")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionLuminance_denoise = QtWidgets.QAction(MainWindow)
        self.actionLuminance_denoise.setObjectName("actionLuminance_denoise")
        self.actionColor_denoise = QtWidgets.QAction(MainWindow)
        self.actionColor_denoise.setObjectName("actionColor_denoise")
        self.actionLicense = QtWidgets.QAction(MainWindow)
        self.actionLicense.setObjectName("actionLicense")
        self.actionAuthor = QtWidgets.QAction(MainWindow)
        self.actionAuthor.setObjectName("actionAuthor")
        self.actionVersion = QtWidgets.QAction(MainWindow)
        self.actionVersion.setObjectName("actionVersion")
        self.actionHowTo = QtWidgets.QAction(MainWindow)
        self.actionHowTo.setObjectName("actionHowTo")
        self.actionOn = QtWidgets.QAction(MainWindow)
        self.actionOn.setObjectName("actionOn")
        self.actionOff = QtWidgets.QAction(MainWindow)
        self.actionOff.setObjectName("actionOff")
        self.actionVGA_640_480 = QtWidgets.QAction(MainWindow)
        self.actionVGA_640_480.setObjectName("actionVGA_640_480")
        self.actionQHD_960_540 = QtWidgets.QAction(MainWindow)
        self.actionQHD_960_540.setObjectName("actionQHD_960_540")
        self.actionSVGA_800_600 = QtWidgets.QAction(MainWindow)
        self.actionSVGA_800_600.setObjectName("actionSVGA_800_600")
        self.actionHD_1280_720 = QtWidgets.QAction(MainWindow)
        self.actionHD_1280_720.setObjectName("actionHD_1280_720")
        self.actionXGA_1152_864 = QtWidgets.QAction(MainWindow)
        self.actionXGA_1152_864.setObjectName("actionXGA_1152_864")
        self.actionHD_1600_1200 = QtWidgets.QAction(MainWindow)
        self.actionHD_1600_1200.setObjectName("actionHD_1600_1200")
        self.actionHD_1600_1201 = QtWidgets.QAction(MainWindow)
        self.actionHD_1600_1201.setObjectName("actionHD_1600_1201")
        self.actionFullHD_1920_1080 = QtWidgets.QAction(MainWindow)
        self.actionFullHD_1920_1080.setObjectName("actionFullHD_1920_1080")
        self.actionSame_as_source = QtWidgets.QAction(MainWindow)
        self.actionSame_as_source.setObjectName("actionSame_as_source")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuFilter_strenght.addAction(self.actionLuminance_denoise)
        self.menuFilter_strenght.addAction(self.actionColor_denoise)
        self.menuColor.addAction(self.actionOn)
        self.menuColor.addAction(self.actionOff)
        self.menuResolution.addAction(self.actionVGA_640_480)
        self.menuResolution.addAction(self.actionQHD_960_540)
        self.menuResolution.addAction(self.actionSVGA_800_600)
        self.menuResolution.addAction(self.actionHD_1280_720)
        self.menuResolution.addAction(self.actionXGA_1152_864)
        self.menuResolution.addAction(self.actionHD_1600_1200)
        self.menuResolution.addAction(self.actionHD_1600_1201)
        self.menuResolution.addAction(self.actionFullHD_1920_1080)
        self.menuResolution.addSeparator()
        self.menuResolution.addAction(self.actionSame_as_source)
        self.menuEdit.addAction(self.menuColor.menuAction())
        self.menuEdit.addAction(self.menuResolution.menuAction())
        self.menuEdit.addAction(self.menuFilter_strenght.menuAction())
        self.menuAbout.addAction(self.actionLicense)
        self.menuAbout.addAction(self.actionAuthor)
        self.menuAbout.addAction(self.actionVersion)
        self.menuAbout.addAction(self.actionHowTo)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "De-noise Video Filter"))
        self.graphicsView.setToolTip(_translate("MainWindow", "Preview of original image / first frame"))
        self.graphicsView.setWhatsThis(_translate("MainWindow", "Preview of the original image or first video frame."))
        self.graphicsView_2.setToolTip(_translate("MainWindow", "Preview of denoised image / first frame"))
        self.graphicsView_2.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:8.25pt;\">Preview of the denoised image or first video frame (if it\'s ready, of course).</span></p></body></html>"))
        self.progressBar.setToolTip(_translate("MainWindow", "Current progress"))
        self.progressBar.setWhatsThis(_translate("MainWindow", " Progress bar shows you progress of denoising (for video) or, at least, gives you information that it\'s complete."))
        self.pushButton.setToolTip(_translate("MainWindow", "Start denoising"))
        self.pushButton.setWhatsThis(_translate("MainWindow", "\"Denoise it!\" is the magic button that\'ll do all the work if you define file path."))
        self.pushButton.setText(_translate("MainWindow", "Denoise it!"))
        self.horizontalSlider.setToolTip(_translate("MainWindow", "Define filter luminance strenght (optional)"))
        self.horizontalSlider.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:8.25pt;\">By these slider you can define filter strenght for luminance noise. Also remind that higher filter strengh means not only better denoising but fewer detailes remained also. So optimal settings are written beneath so you can return filter strenght to it\'s defaults easilly.</span></p></body></html>"))
        self.horizontalSlider_2.setToolTip(_translate("MainWindow", "Define filter color strenght (optional)"))
        self.horizontalSlider_2.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:8.25pt;\">By thes sliders you can define filter strenght for color noise. Of course, if you set color flag to grayslace, filter color strenght is just a game, enjoy :) Also remind that higher filter strengh means not only better denoising but fewer detailes remained also. So optimal settings are written beneath so you can return filter strenght to it\'s defaults easilly.</span></p></body></html>"))
        self.label.setText(_translate("MainWindow", "Default: 4"))
        self.label_2.setText(_translate("MainWindow", "Filter luminosity strenght"))
        self.label_3.setText(_translate("MainWindow", "Default: 5"))
        self.label_4.setText(_translate("MainWindow", "Filter color strenght"))
        self.label_5.setText(_translate("MainWindow", "Open file:"))
        self.lineEdit.setToolTip(_translate("MainWindow", "File path"))
        self.lineEdit.setWhatsThis(_translate("MainWindow", "By this panel you can define file path manually or using standart system view, as you wish."))
        self.pushButton_2.setToolTip(_translate("MainWindow", "Browse file"))
        self.pushButton_2.setWhatsThis(_translate("MainWindow", "By this panel you can define file path manually or using standart system view, as you wish."))
        self.pushButton_2.setText(_translate("MainWindow", "Browse"))
        self.comboBox_2.setToolTip(_translate("MainWindow", "Define the output resolution (optional)"))
        self.comboBox_2.setWhatsThis(_translate("MainWindow", "Here you can define the resolution of output file if you want to change it. Please remind that higher resolution means moch more resourses to denoise it."))
        self.comboBox_2.setItemText(0, _translate("MainWindow", "Same as source"))
        self.comboBox_2.setItemText(1, _translate("MainWindow", "VGA (640*480)"))
        self.comboBox_2.setItemText(2, _translate("MainWindow", "SVGA (800*600)"))
        self.comboBox_2.setItemText(3, _translate("MainWindow", "qHD (960*540)"))
        self.comboBox_2.setItemText(4, _translate("MainWindow", "HD (1280*720)"))
        self.comboBox_2.setItemText(5, _translate("MainWindow", "XGA+ (1152*864)"))
        self.comboBox_2.setItemText(6, _translate("MainWindow", "HD+ (1600*900)"))
        self.comboBox_2.setItemText(7, _translate("MainWindow", "UXGA (1600*1200)"))
        self.comboBox_2.setItemText(8, _translate("MainWindow", "FullHD (1920*1080)"))
        self.label_6.setText(_translate("MainWindow", "Estimated memory use: "))
        self.label_7.setText(_translate("MainWindow", "Estimated denoising time: "))
        self.lcdNumber.setToolTip(_translate("MainWindow", "How much RAM (in Gb) you\'ll need for denoising"))
        self.lcdNumber.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:8.25pt;\">That panel gives you information about estimated memory use (in gigabytes) that you\'ll need for denoising.</span></p></body></html>"))
        self.lcdNumber_2.setToolTip(_translate("MainWindow", "How much time (nearly) in minutes denoising will take"))
        self.lcdNumber_2.setWhatsThis(_translate("MainWindow", "<html><head/><body><p>That panel gives you information about estimated denoising time (in minutes).</p></body></html>"))
        self.checkBox.setText(_translate("MainWindow", "Grayscale"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuFilter_strenght.setTitle(_translate("MainWindow", "Filter strenght"))
        self.menuColor.setTitle(_translate("MainWindow", "Color"))
        self.menuResolution.setTitle(_translate("MainWindow", "Resolution"))
        self.menuAbout.setTitle(_translate("MainWindow", "About"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionLuminance_denoise.setText(_translate("MainWindow", "Luminance denoise"))
        self.actionLuminance_denoise.setShortcut(_translate("MainWindow", "Ctrl+F, Ctrl+L"))
        self.actionColor_denoise.setText(_translate("MainWindow", "Color denoise"))
        self.actionColor_denoise.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionLicense.setText(_translate("MainWindow", "License"))
        self.actionAuthor.setText(_translate("MainWindow", "Author"))
        self.actionVersion.setText(_translate("MainWindow", "About"))
        self.actionHowTo.setText(_translate("MainWindow", "HowTo"))
        self.actionHowTo.setShortcut(_translate("MainWindow", "Ctrl+H"))
        self.actionOn.setText(_translate("MainWindow", "On"))
        self.actionOff.setText(_translate("MainWindow", "Off"))
        self.actionVGA_640_480.setText(_translate("MainWindow", "VGA (640*480)"))
        self.actionQHD_960_540.setText(_translate("MainWindow", "qHD (960*540)"))
        self.actionSVGA_800_600.setText(_translate("MainWindow", "SVGA (800*600)"))
        self.actionHD_1280_720.setText(_translate("MainWindow", "HD (1280*720)"))
        self.actionXGA_1152_864.setText(_translate("MainWindow", "XGA+ (1152*864)"))
        self.actionHD_1600_1200.setText(_translate("MainWindow", "HD+ (1600*900)"))
        self.actionHD_1600_1201.setText(_translate("MainWindow", "HD+ (1600*1200)"))
        self.actionFullHD_1920_1080.setText(_translate("MainWindow", "FullHD (1920*1080)"))
        self.actionSame_as_source.setText(_translate("MainWindow", "Same as source"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

